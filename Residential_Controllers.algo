
//------------------------------------------------- BRIEF DESCRIPTION / SUMMARY / NOTES -------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------

// BRIEF DESCRIPTION:

This algorithm is built to serve users of elevators in Residential building. The following text 
explains this concept:
In each floor there is a Call-Button fixed outside elevators, conatains two options UP or DOWN, allowing user to request the best 
available elevator. Inside each elevator there is a panel allowing user to choose the demand floor. In our case the building conatins 
10 floors. There is only one column which operates two elevators (elavator-1 and elevator-2).
To go back or to move to another floor, user follows alawyas the same procedure.


// SUMMARY:

1- SEQUENCES OF ADDITIONAL REQUIREMENTS
2- SEQUENCES OF ESSENTIALS REQUIREMENTS
3- MAIN PROGRAM 
4- TESTING PROGRAM


// NOTES:

Attributes:
Elevator-N-Position is an attribute of Elevator-N 

Status:
Elevator-Status has Four Differents Status: 
Activ: When it is using by persons
Inactiv: When It is Not Used. 
ON SERVICE: If There Is No Problem Detected By Alarm System Of The Building
OUT OF SERVICE: If THere Is Problems Detected By Alarm System Of The Building

Alarm-Status: It has only two status (It is an alarm of the entire building. So the outputs are considered as entries in this algorithm)
Problem: Whwn alarm detects problems like fire or seisim ect.
NoProblem: No problems to be detected


--------------------------------------------------- SEQUENCES OF ADDITIONAL REQUIREMENTS --------------------------------------------------
------------------------------------------------- SEQUENCES ARE ORDERED BY ALPHABETIC ORDER -----------------------------------------------


// Logic To Operate Situation If Alarm System Of The Building Detects Problem. It Has Only Two Status Problem Or NoProblem

SEQUENCE Check-Alarm-Status  USING Alarm-Status
    
    Variable Best-Elevator-Status = ON SERVICE         // Attribute
    WHILE( Alarm-Status:Problem )DO
        Set Best-Elevator-Status = OUT OF SERVICE
        CALL Open-Door
        Display in Best-Elevator = "OUT OF SERVICE"
    END WHILE

END SEQUENCE


// Logic Of Loading: Check Weight until becoming less than 1200 KG

SEQUENCE Check-Weight USING Weight
    
    WHILE (Best-Elevator-Weight >= 1200 KG) DO
        Display in Best-Elevator = "Weight is exceeding the capacity of elevator"
        Set Best-Elevator-Status = OUT OF SERVICE
        CALL Open-Door
    END WHILE

    Go To Next Step

END SEQUENCE


// Logic Back TO The Origin: Original Place Of Elevators According To Two Parameters DayTime And Days.
//Inactiv-time = Time while elevator is on service and is not using by anyone

SEQUENCE Position-Elevator-By-Default USING Time AND Days AND NbrFloors

    WHILE (DayTime between 06:00 to 11:00  and Days between Monday to Saturday and Inactiv-time >10 min) DO
        SET Elevator1-Position = Round Down(NbrFloors x 1/4) = Round Down(10 x 1/4) = 2nd Floor
        SET Elevator2-Position = Round Down(NbrFloors x 3/4) = Round Down(10x 3/4) = 7th Floor
    END WHILE

    WHILE (DayTime between 11:01 to 05:59  and Days between Monday to Saturday and Inactiv-time >10 min) DO
        SET Elevator1-Position = 1st Floor
        SET Elevator2-Position = Round Down(NbrFloors x 1/2) = Round Down(10x 1/2) = 5th Floor
    END WHILE

    WHILE (Day is Sunday and Inactiv-time >10 min ) DO
        SET Elevator1-Position = 1st Floor
        SET Elevator2-Position = Round UP(NbrFloors x 1/2) = Round UP(10x 1/2) = 5th Floor
    END WHILE

END SEQUENCE


---------------------------------------------------- SEQUENCES OF ESSENTIALS REQUIREMENTS -------------------------------------------------
------------------------------------------------- SEQUENCES ARE ORDERED BY ALPHABETIC ORDER -----------------------------------------------

// Logic To Close Doors

SEQUENCE Close-Doors USING Time AND Barrier

    Variable Waiting-Time = 0 sec
    WHILE (Best-Elevator-Waiting-Time < 7 seconds OR Barrier = True) DO
        SET Best-Elevator-Doors-Situation = Opened
        Best-Elevator-Waiting-Time = Best-Elevator-Waiting-Time + 1 sec
    END WHILE

    SET Best-Elevator-Doors-Situation = Closed       // Attribute

END SEQUENCE


// Logic To Find Available And Nearest Elevator By Searching Distance And Direction

SEQUENCE Find-Best-Elevator USING CurrentFloor AND Direction 
    
    Variable ARRAY Column = Elevator-1 to Elevator-N           // In our case Elevator-1 and Elevator-2 

    // Suppose Initially That The Best Elevator is Elevator-1

    Variable Best-Elevator = Elevator-1                               
    Variable Best-Distance = |Elevator-1-Position  -  Current-Floor|
    
    FOR EACH Elevator-N IN Column
        IF ( |Elevator-N-Position  -  Current-Floor| < Best-Distance ) 

            IF((Elevator-N is Inactiv) OR (Elevator-N is Activ AND Same Direction))
                
                Best-Elevator = Elevator-N
                Best-Distance = |Elevator-N-Position - Current-Floor|

            END IF
          
        END IF 

    END FOR

    Variable Best-Elevator-Position = Best-Elevator Postion
    Return Best-Elevator, Best-Elevator Postion     // Elevator Attribute

END SEQUENCE


// Logic To Move Elevator To Current-Floor

SEQUENCE Move-Elevator-To-CurrentFloor USING Current-Floor AND Best-Elevator

    
    While ((Current-Floor - Best-Elevator-Position) > 0) DO  // Example 5-2 > 0
        Move Best-Elevator Up
        REPEAT
            Incriment Floor
        UNTIL Current-Floor = Best-Elevator-Position
    END WHILE

    While ((Current-Floor - Best-Elevator-Position) < 0) DO  // Example 3-6 < 0
        Move Best-Elevator Down
        REPEAT
            Dicriment Floor
        UNTIL Current-Floor = Best-Elevator-Position
    END WHILE

END SEQUENCE


// Logic To Move Elevator To Distination

SEQUENCE Move-Elevator-To-Destination USING Current-Floor AND Demand-Floor AND Best-Elevator

    
    While ((Demand-Floor - Current-Floor) > 0) DO
        Move Best-Elevator Up
        REPEAT
            Incriment Floor
        UNTIL Demand-Floor = Current-Floor
    END WHILE

    While ((Demand-Floor - Current-Floor) < 0) DO
        Move Best-Elevator Down
        REPEAT
            Dicriment Floor
        UNTIL Demand-Floor = Current-Floor
    END WHILE

END SEQUENCE


// Logic To Open Doors

SEQUENCE Open-Doors USING Time AND Barrier

    SET Best-Elevator-Doors-Situation = Opened      // Attribute
    Variable Waiting-Time = 0 sec
    WHILE (Best-Elevator-Waiting-Time < 7 seconds OR Barrier = True OR Alarm-Status:Problem) DO
        SET Best-Elevator-Doors-Situation = Opened
        Best-Elevator-Waiting-Time = Best-Elevator-Waiting-Time + 1 sec
    END WHILE

    SET Best-Elevator-Doors-Situation = Closed

END SEQUENCE


//  ------------------------------------------------------  MAIN PROGRAM  ---------------------------------------------------------
//  --------------------------------------------  SEQUENCES ARE ORDERED BY LOGIC ORDER --------------------------------------------

// When User push the Call-Button.
// By Pushing Call-Button The Following Informations Will Be Known: Current-Floor AND Direction

SEQUENCE Request-Elevator     USING       Current-Floor AND Direction
    
    CALL Find-Best-Elevator               WITH  Current-Floor AND Direction 
    CALL Check-Alarm-Status               WITH  Alarm-Status  // Alarm System Of The Building. It Has Only Two Status Problem Or NoProblem
    CALL Move-Elevator-To-CurrentFloor    WITH  Current-Floor AND Best-Elevator                               
    CALL Open-Doors                       WITH  Best-Elevator AND Waiting-Time AND Barrier 

END SEQUENCE


// When User push the Request-Floor-Button From inside Elevator

SEQUENCE Request-Floor        USING       Demand-Floor AND Current-Floor         
    
    CALL Check-Weight                     WITH  Weight
    CALL Check-Alarm-Status               WITH  Alarm-Status
    CALL Close-Doors                      WITH  Best-Elevator AND Waiting-Time AND Barrier                                     
    CALL Move-Elevator-To-Destination     WITH  Current-Floor AND Demand-Floor AND Best-Elevator
    CALL Open-Doors                       WITH  Best-Elevator AND Waiting-Time AND Barrier 

END SEQUENCE


// --------------------------------------------------  TESTING PROGRAM  -----------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------


// Scenario 1: With elevator-1 Idle (Inactiv) at floor 2 and elevator-2  Idle at floor 6, someone is on floor 3 and requests 
the 7th floor, elevator-1 is expected to be sent.

SEQUENCE Request-Elevator     USING       Current-Floor = 3 AND Direction = UP 
    
    CALL Find-Best-Elevator               Result:  Elevator-1
    CALL Alarm-Status                     Result:  Elevator-Status = On Service (Supposed)
    CALL Move-Elevator-To-CurrentFloor    Result:  Elevator-1 Move From Floor 2 To Floor 3                              
    CALL Open-Doors                       Result:  Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

SEQUENCE Request-Floor        USING       Demand-Floor = 7 AND  Current-Floor = 3           
    
    CALL Check-Weight                     Result: < 1200 KG (Supposed)
    CALL Check-Alarm-Status               Result: On Service (Supposed)
    CALL Close-Doors                      Result: Close Doors After 7 sec (No Barriers)                                  
    CALL Move-Elevator-To-Destination     Result: Elevator-1 Move From Floor 3 to Floor 7
    CALL Open-Doors                       Result: Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE


----------------------------------------------------------------------------------------------------------------------------------
// Scenario 2: With elevator-1 idle (Inactiv) at floor 10 and elevator-2 idle at floor 3, someone is on the 1st floor and requests
 the 6th floor, elevator-2 should be sent. 
2 minutes later, someone else is on the 3rd floor and requests the 5th floor. Elevator-2 should be sent.
Finally, a third person is on floor 9 and wants to go down to the 2nd floor. Elevator-1 should be sent


SEQUENCE Request-Elevator     USING       Current-Floor = 1 AND Direction = UP 
    
    CALL Find-Best-Elevator               Result:  Elevator-2
    CALL Alarm-Status                     Result:  Elevator-Status = On Service (Supposed)
    CALL Move-Elevator-To-CurrentFloor    Result:  Elevator-2 Move From Floor 3 To Floor 1                             
    CALL Open-Doors                       Result:  Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

SEQUENCE Request-Floor        USING       Demand-Floor = 6 AND  Current-Floor = 1          
    
    CALL Check-Weight                     Result: < 1200 KG (Supposed)
    CALL Check-Alarm-Status               Result: On Service (Supposed)
    CALL Close-Doors                      Result: Close Doors After 7 sec (No Barriers)                                  
    CALL Move-Elevator-To-Destination     Result: Elevator-2 Move From Floor 1 to Floor 6
    CALL Open-Doors                       Result: Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE


// Scenario 2: 2 min later - Second person ------------------------------------------------------------------------------------------

SEQUENCE Request-Elevator     USING       Current-Floor = 3 AND Direction = UP 
    
    CALL Find-Best-Elevator               Result:  Elevator-2
    CALL Alarm-Status                     Result:  Elevator-Status = On Service (Supposed)
    CALL Move-Elevator-To-CurrentFloor    Result:  Elevator-2 Move From Floor 6 To Floor 3                             
    CALL Open-Doors                       Result:  Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

SEQUENCE Request-Floor        USING       Demand-Floor = 5 AND  Current-Floor = 3         
    
    CALL Check-Weight                     Result: < 1200 KG (Supposed)
    CALL Check-Alarm-Status               Result: On Service (Supposed)
    CALL Close-Doors                      Result: Close Doors After 7 sec (No Barriers)                                  
    CALL Move-Elevator-To-Destination     Result: Elevator-2 Move From Floor 3 to Floor 5
    CALL Open-Doors                       Result: Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE


// Scenario 2: Third person ---------------------------------------------------------------------------------------------------------

SEQUENCE Request-Elevator     USING       Current-Floor = 9 AND Direction = DOWN
    
    CALL Find-Best-Elevator               Result:  Elevator-1
    CALL Alarm-Status                     Result:  Elevator-Status = On Service (Supposed)
    CALL Move-Elevator-To-CurrentFloor    Result:  Elevator-1 Move From Floor 10 To Floor 9                             
    CALL Open-Doors                       Result:  Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

SEQUENCE Request-Floor        USING       Demand-Floor = 2 AND  Current-Floor = 9        
    
    CALL Check-Weight                     Result: < 1200 KG (Supposed)
    CALL Check-Alarm-Status               Result: On Service (Supposed)
    CALL Close-Doors                      Result: Close Doors After 7 sec (No Barriers)                                  
    CALL Move-Elevator-To-Destination     Result: Elevator-1 Move From Floor 9 to Floor 2
    CALL Open-Doors                       Result: Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE


---------------------------------------------------------------------------------------------------------------------------
// Scenario 3: With elevator-1 idle (Inactiv) at floor 10 and elevator-2 moving from floor 3 to floor 6, someone is on floor 3 and 
requests the 2nd floor. Elevator-1 should be sent. 
5 minutes later, someone else is on the 10th floor and wants to go down to the 3rd floor. Elevator-2 should be sent.

SEQUENCE Request-Elevator     USING       Current-Floor = 3 AND Direction = DOWN
    
    CALL Find-Best-Elevator               Result:  Elevator-1
    CALL Alarm-Status                     Result:  Elevator-Status = On Service (Supposed)
    CALL Move-Elevator-To-CurrentFloor    Result:  Elevator-1 Move From Floor 10 To Floor 3                              
    CALL Open-Doors                       Result:  Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

SEQUENCE Request-Floor        USING       Demand-Floor = 2 AND  Current-Floor = 3           
    
    CALL Check-Weight                     Result: < 1200 KG (Supposed)
    CALL Check-Alarm-Status               Result: On Service (Supposed)
    CALL Close-Doors                      Result: Close Doors After 7 sec (No Barriers)                                  
    CALL Move-Elevator-To-Destination     Result: Elevator-1 Move From Floor 3 to Floor 2
    CALL Open-Doors                       Result: Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

// Scenario 3: 5 min later - Second person ------------------------------------------------------------------------------------

SEQUENCE Request-Elevator     USING       Current-Floor = 10 AND Direction = DOWN
    
    CALL Find-Best-Elevator               Result:  Elevator-2
    CALL Alarm-Status                     Result:  Elevator-Status = On Service (Supposed)
    CALL Move-Elevator-To-CurrentFloor    Result:  Elevator-2 Move From Floor 6 To Floor 10                             
    CALL Open-Doors                       Result:  Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE

SEQUENCE Request-Floor        USING       Demand-Floor = 3 AND  Current-Floor = 10         
    
    CALL Check-Weight                     Result: < 1200 KG (Supposed)
    CALL Check-Alarm-Status               Result: On Service (Supposed)
    CALL Close-Doors                      Result: Close Doors After 7 sec (No Barriers)                                  
    CALL Move-Elevator-To-Destination     Result: Elevator-2 Move From Floor 10 to Floor 3
    CALL Open-Doors                       Result: Open Doors And Close them After 7 sec (No Barriers)

END SEQUENCE


------------------------------------------------------------  END  ----------------------------------------------------------